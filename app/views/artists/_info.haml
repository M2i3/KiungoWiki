.section.summary
  %p
    = date_location_formatted(t("birth"), @artist.birth_date, @artist.birth_location)
  %p
    = date_location_formatted(t("death"), @artist.death_date, @artist.death_location)
  - unless @artist.artist_wiki_links.empty?
    %p
    - unless @artist.is_group.blank? or @artist.is_group == "0"
      = Artist.human_attribute_name("group_is_composed_of")
    - else
      = Artist.human_attribute_name("is_member_of_group")
    \: 
    - @artist.artist_wiki_links.each do |awl|
      #{artist_wiki_link_path(awl)};

%h2= Work.model_name.human.pluralize
- if @artist.work_wiki_links.size == 0 
  %p #{t('messages.artist_no_work')}.
- else
  .right-size
    %table.table.table-striped
      %thead
        %tr
          %th= Work.human_attribute_name("title")
          %th= Work.human_attribute_name("date_written")
          %th= WorkWikiLink.human_attribute_name("role")       
      %tbody
        - @artist.grouped_work_wiki_links.sort{|a,b| ((a.date_written <=> b.date_written) || 1) }.each do |wwl|

          %tr
            %td= work_wiki_link_path(wwl)
            %td= wwl.date_written
            %td= wwl.role

- if @artist.artist_wiki_links.size == 0 
- else
  %h2= Work.human_attribute_name("relation").pluralize
  .right-size
    %table.table.table-striped
      %thead
        %tr
          %th= Artist.human_attribute_name("nature")
          %th= Artist.human_attribute_name("artist_wiki_links_text") 

      %tbody
        - @artist.artist_wiki_links.each do |awl|
          %tr
            %td= Artist.human_attribute_name(awl.relation)
            %td= artist_wiki_link_path(awl)

%h2= Recording.model_name.human.pluralize
- if @artist.recording_wiki_links.size == 0 
  %p #{t('messages.artist_no_recordings')}.
- else
  .right-size
    %table.table.table-striped
      %thead
        %tr
          %th= Recording.human_attribute_name("title")
          %th= Recording.human_attribute_name("recording_date")
          %th= Recording.human_attribute_name("duration")
          %th= Recording.human_attribute_name("role")
      %tbody
        - @artist.recording_wiki_links.sort{|a,b| ((a.recording_date <=> b.recording_date) || 1) }.each do |rwl| 
          %tr
            %td= recording_wiki_link_path(rwl)
            %td= rwl.recording_date    
            %td= rwl.duration  
            %td= rwl.recording.artist_wiki_links.where(artist_id: @artist.id).collect{|awl| awl.role }.join(", ").html_safe

%h2= Release.model_name.human.pluralize
- if @artist.release_wiki_links.size == 0 
  %p #{t('messages.artist_no_releases')}.
- else
  .right-size
    %table.table.table-striped
      %thead
        %tr
          %th= Release.human_attribute_name("title")
          %th= Release.human_attribute_name("date_released")
          %th= Release.human_attribute_name("media_type")
          %th= Release.human_attribute_name("label")

      %tbody
        - @artist.release_wiki_links.sort{|a,b| ((a.date_released <=> b.date_released) || 1)}.each do |awl|
          %tr
            %td= release_wiki_link_path(awl)
            %td= awl.date_released
            %td= awl.media_type
            %td= awl.label

- @artist.supplementary_sections.each do |ss|
  %h2= ss.title 
  = RedCloth.new(ss.content).to_html.html_safe

- unless @artist.new_record?
  .well 
    = content_tag(:small, updated_at(@artist))